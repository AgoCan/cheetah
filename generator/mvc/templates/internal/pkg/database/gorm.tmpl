package database

// https://gorm.io/zh_CN/
import (
	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/mysql"
)

// 预留给其他的数据库，所以这么写，例如redis可以继续添加
type Options struct {
	Migrate bool
}

type Client struct {
	DB *gorm.DB
}

type Option interface {
	apply(*Options)
}

func NewClient(addr string, opts ...Option) *Client {
	db, err := gorm.Open("mysql", addr)
	if err != nil {
		fmt.Println(err)
		return nil
	}
	options := Options{
		Migrate: true,
	}
	for _, o := range opts {
		o.apply(&options)
	}

	// 尝试连接
	err = db.DB().Ping()
	return &Client{
		DB: db,
	}
}

type Migrate bool

func (m Migrate) apply(o *Options) {
	o.Migrate = bool(m)
}

func WithMigrate(c bool) Option {
	return Migrate(c)
}

func migrate() {
}
